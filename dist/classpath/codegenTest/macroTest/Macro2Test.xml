<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2010-2012 napile.org
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<class version="0" name="codegenTest.macroTest.Macro2Test">
	<modifiers>
		<static/>
	</modifiers>
	<extends>
		<type nullable="false">
			<class_type name="napile.lang.Any"/>
		</type>
	</extends>
	<variable name="a">
		<return_type>
			<type nullable="false">
				<class_type name="napile.lang.Int"/>
			</type>
		</return_type>
	</variable>
	<method name="a$set">
		<return_type>
			<type nullable="false">
				<class_type name="napile.lang.Null"/>
			</type>
		</return_type>
		<parameters>
			<parameter name="value">
				<modifiers>
					<final/>
				</modifiers>
				<type nullable="false">
					<class_type name="napile.lang.Int"/>
				</type>
			</parameter>
		</parameters>
		<code max_locals="2">
			<load val="0">
				<!--0-->
			</load>
			<load val="1">
				<!--1-->
			</load>
			<put_to_variable>
				<variable name="codegenTest.macroTest.Macro2Test.a">
					<type nullable="false">
						<class_type name="napile.lang.Int"/>
					</type>
				</variable>
				<!--2-->
			</put_to_variable>
			<invoke_static>
				<method name="napile.lang.Null.INSTANCE$get">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Null"/>
						</type>
					</return_type>
				</method>
				<!--3-->
			</invoke_static>
			<return>
				<!--4-->
			</return>
		</code>
	</method>
	<method name="a$get">
		<return_type>
			<type nullable="false">
				<class_type name="napile.lang.Int"/>
			</type>
		</return_type>
		<code max_locals="1">
			<load val="0">
				<!--0-->
			</load>
			<get_variable>
				<variable name="codegenTest.macroTest.Macro2Test.a">
					<type nullable="false">
						<class_type name="napile.lang.Int"/>
					</type>
				</variable>
				<!--1-->
			</get_variable>
			<return>
				<!--2-->
			</return>
		</code>
	</method>
	<method name="this">
		<modifiers>
			<final/>
		</modifiers>
		<return_type>
			<type nullable="false">
				<this_type/>
			</type>
		</return_type>
		<code max_locals="1">
			<load val="0">
				<!--0-->
			</load>
			<invoke_special>
				<method name="napile.lang.Any.this">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Null"/>
						</type>
					</return_type>
				</method>
				<!--1-->
			</invoke_special>
			<pop>
				<!--2-->
			</pop>
			<load val="0">
				<!--3-->
			</load>
			<new_int val="0">
				<!--4-->
			</new_int>
			<put_to_variable>
				<variable name="codegenTest.macroTest.Macro2Test.a">
					<type nullable="false">
						<class_type name="napile.lang.Int"/>
					</type>
				</variable>
				<!--5-->
			</put_to_variable>
			<load val="0">
				<!--6-->
			</load>
			<return>
				<!--7-->
			</return>
		</code>
	</method>
	<method name="test">
		<return_type>
			<type nullable="false">
				<class_type name="napile.lang.Null"/>
			</type>
		</return_type>
		<code max_locals="1">
			<load val="0">
				<!--0-->
			</load>
			<macro_jump>
				<method name="codegenTest.macroTest.Macro2Test.a0">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Null"/>
						</type>
					</return_type>
				</method>
				<!--1-->
			</macro_jump>
			<load val="0">
				<!--2-->
			</load>
			<macro_jump>
				<method name="codegenTest.macroTest.Macro2Test.a0">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Null"/>
						</type>
					</return_type>
				</method>
				<!--3-->
			</macro_jump>
			<load val="0">
				<!--4-->
			</load>
			<macro_jump>
				<method name="codegenTest.macroTest.Macro2Test.a0">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Null"/>
						</type>
					</return_type>
				</method>
				<!--5-->
			</macro_jump>
			<new_string val="'main' called">
				<!--6-->
			</new_string>
			<invoke_static>
				<method name="napile.io.Console.writeLine">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Null"/>
						</type>
					</return_type>
					<parameters>
						<type nullable="false">
							<class_type name="napile.lang.String"/>
						</type>
					</parameters>
				</method>
				<!--7-->
			</invoke_static>
			<invoke_static>
				<method name="napile.lang.Null.INSTANCE$get">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Null"/>
						</type>
					</return_type>
				</method>
				<!--8-->
			</invoke_static>
			<return>
				<!--9-->
			</return>
		</code>
	</method>
	<macro name="a0">
		<modifiers>
			<local/>
		</modifiers>
		<return_type>
			<type nullable="false">
				<class_type name="napile.lang.Null"/>
			</type>
		</return_type>
		<code max_locals="1">
			<load val="0">
				<!--0-->
			</load>
			<invoke_virtual>
				<method name="codegenTest.macroTest.Macro2Test.a$get">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Int"/>
						</type>
					</return_type>
				</method>
				<!--1-->
			</invoke_virtual>
			<new_int val="2">
				<!--2-->
			</new_int>
			<invoke_virtual>
				<method name="napile.lang.Int.equals">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Bool"/>
						</type>
					</return_type>
					<parameters>
						<type nullable="true">
							<class_type name="napile.lang.Any"/>
						</type>
					</parameters>
				</method>
				<!--3-->
			</invoke_virtual>
			<invoke_static>
				<method name="napile.lang.Bool.TRUE$get">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Bool"/>
						</type>
					</return_type>
				</method>
				<!--4-->
			</invoke_static>
			<jump_if val="8">
				<!--5-->
			</jump_if>
			<invoke_static>
				<method name="napile.lang.Null.INSTANCE$get">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Null"/>
						</type>
					</return_type>
				</method>
				<!--6-->
			</invoke_static>
			<return>
				<!--7-->
			</return>
			<load val="0">
				<!--8-->
			</load>
			<dup>
				<!--9-->
			</dup>
			<invoke_virtual>
				<method name="codegenTest.macroTest.Macro2Test.a$get">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Int"/>
						</type>
					</return_type>
				</method>
				<!--10-->
			</invoke_virtual>
			<dup1x1>
				<!--11-->
			</dup1x1>
			<invoke_virtual>
				<method name="napile.lang.Int.inc">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Int"/>
						</type>
					</return_type>
				</method>
				<!--12-->
			</invoke_virtual>
			<invoke_virtual>
				<method name="codegenTest.macroTest.Macro2Test.a$set">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Null"/>
						</type>
					</return_type>
					<parameters>
						<type nullable="false">
							<class_type name="napile.lang.Int"/>
						</type>
					</parameters>
				</method>
				<!--13-->
			</invoke_virtual>
			<pop>
				<!--14-->
			</pop>
			<new_string val="a == ">
				<!--15-->
			</new_string>
			<load val="0">
				<!--16-->
			</load>
			<invoke_virtual>
				<method name="codegenTest.macroTest.Macro2Test.a$get">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Int"/>
						</type>
					</return_type>
				</method>
				<!--17-->
			</invoke_virtual>
			<invoke_virtual>
				<method name="napile.lang.String.plus">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.String"/>
						</type>
					</return_type>
					<parameters>
						<type nullable="false">
							<class_type name="napile.lang.Any"/>
						</type>
					</parameters>
				</method>
				<!--18-->
			</invoke_virtual>
			<invoke_static>
				<method name="napile.io.Console.writeLine">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Null"/>
						</type>
					</return_type>
					<parameters>
						<type nullable="false">
							<class_type name="napile.lang.String"/>
						</type>
					</parameters>
				</method>
				<!--19-->
			</invoke_static>
		</code>
	</macro>
	<method name="main">
		<modifiers>
			<static/>
		</modifiers>
		<return_type>
			<type nullable="false">
				<class_type name="napile.lang.Null"/>
			</type>
		</return_type>
		<parameters>
			<parameter name="arg">
				<type nullable="false">
					<class_type name="napile.lang.Array"/>
					<type_arguments>
						<type nullable="false">
							<class_type name="napile.lang.String"/>
						</type>
					</type_arguments>
				</type>
			</parameter>
		</parameters>
		<code max_locals="1">
			<new_object>
				<type nullable="false">
					<class_type name="codegenTest.macroTest.Macro2Test"/>
				</type>
				<!--0-->
			</new_object>
			<invoke_virtual>
				<method name="codegenTest.macroTest.Macro2Test.test">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Null"/>
						</type>
					</return_type>
				</method>
				<!--1-->
			</invoke_virtual>
			<invoke_static>
				<method name="napile.lang.Null.INSTANCE$get">
					<return_type>
						<type nullable="false">
							<class_type name="napile.lang.Null"/>
						</type>
					</return_type>
				</method>
				<!--2-->
			</invoke_static>
			<return>
				<!--3-->
			</return>
		</code>
	</method>
</class>
